{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ABC","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","shouldReverse","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,MACjBC,EAAoB,SAyBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA3BR,SAA0BC,EAA1B,GAAwE,IAArCL,EAAoC,EAApCA,UAAaM,EAAuB,wDAC/DC,EAAa,YAAOF,GAmB1B,OAjBIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKJ,EACH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXN,GACFC,EAAcM,UAGTN,EAOcO,CAAiBnB,EACpC,CAAEK,aAAaE,GAWjB,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,IAAcJ,EAAiB,GAAK,YACjEqB,QAAS,kBAAMhB,EAAaL,IAH9B,iCAQA,wBACEoB,KAAK,SACLD,UAAS,4BAAuBf,IAAcH,EAAoB,GAAK,YACvEoB,QAAS,kBAAMhB,EAAaJ,IAH9B,4BAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBb,EAAa,GAAK,YAClDe,QA/Bc,WACpBd,GAAeD,IA2BX,qBAQe,KAAdF,GAAoBE,EACnB,wBACEc,KAAK,SACLD,UAAU,4BACVE,QApCU,WAClBhB,EAAa,IACbE,GAAc,IA+BR,mBAOE,QAGLC,EAAac,KAAI,SAAAC,GAAI,OACpB,6BACE,oBAAI,UAAQ,OAAZ,SAAoBA,KADbA,UC/FjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b63d79e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ABC = 'abc';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField }, shouldReverse = false) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ABC:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (shouldReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField }, isReversed);\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortField === SORT_FIELD_ABC ? '' : 'is-light'}`}\n          onClick={() => setSortField(SORT_FIELD_ABC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortField === SORT_FIELD_LENGTH ? '' : 'is-light'}`}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {sortField !== '' || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      {visibleGoods.map(good => (\n        <ul key={good}>\n          <li data-cy=\"Good\">{good}</li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}